There are 3 mechanism to provide database password to sqoop command

Option 1:  Pass password as plain text in sqoop command itself using --password option. 
	> sqoop list-databases --connect jdbc:mysql://localhost:3306 --username root --password cloudera
	
	In this approach password can be read is exposed directly thus less secure.

Option 2: Write the passowrd in a text file and pass the reference of that file to sqoop comamnd using --password-file option
	> echo -n "cloudera" > /home/cloudera/mysql-password
	> sqoop list-databases --connect jdbc:mysql://localhost:3306 --username root --password-file file:///home/cloudera/mysql-password
	
	In this approach although password is still present in plain text form but we can still control the access of the password file using linux permission.
	
Option 3: Pass password in the form of an alias using --password-alias option. In this approach we use hadoop credential API to create the alias for our password. 
		  We will use hadoop credential create command to create the alias. This command will prompt us to type the password and confirm the same.
		  Below command shows how to create the alias and use that in sqoop command
		  
	> hadoop credential create mysql.password -provider jceks://hdfs/user/cloudera/mysql.password.jceks
		Enter the password :
		Reenter the password :
		mysql.password is created successfully
		jceks://hdfs/user/cloudera/mysql.password.jceks updated successfully.
	> sqoop list-databases -Dhadoop.security.credential.provider.path=jceks://hdfs/user/cloudera/mysql.password.jceks --connect jdbc:mysql://localhost:3306 --username root --password-alias mysql.password
	
	-Dhadoop.security.credential.provider.path is required as hadoop will search the alias in the providers passed in this parameter.
	
	In this approach, password is in encrypted form and can not be read thus more secure.